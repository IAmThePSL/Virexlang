{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Virex",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#conditionals"
		},
		{
			"include": "#loops"
		},
		{
			"include": "#objects"
		},
		{
			"include": "#classes"
		},
		{
			"include": "#print"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.virex",
					"match": "\\b(if|else|for|while|return|class|function|let|const|import)\\b"
				},
				{
					"name": "keyword.type.virex",
					"match": "\\b(int|str|bool|void)\\b"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.language.virex",
					"match": "\\b(this)\\b"
				},
				{
					"name": "variable.other.virex",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.virex",
					"match": "\\bfunction\\s+[a-zA-Z_][a-zA-Z0-9_]*"
				}
			]
		},
		"conditionals": {
			"patterns": [
				{
					"name": "meta.conditional.virex",
					"match": "\\b(if|else)\\b"
				}
			]
		},
		"loops": {
			"patterns": [
				{
					"name": "meta.loop.virex",
					"match": "\\b(for|while)\\b"
				}
			]
		},
		"objects": {
			"patterns": [
				{
					"name": "meta.object-literal.virex",
					"match": "\\blet\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\\{"
				}
			]
		},
		"classes": {
			"patterns": [
				{
					"name": "entity.name.type.class.virex",
					"match": "\\bclass\\s+[A-Z][a-zA-Z0-9_]*"
				}
			]
		},
		"print": {
			"patterns": [
				{
					"name": "support.function.print.virex",
					"match": "\\bprint\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.assignment.virex",
					"match": "\\b(=|\\+=|-=|\\*=|/=|%=)\\b"
				},
				{
					"name": "keyword.operator.arithmetic.virex",
					"match": "\\b(\\+|-|\\*|\\/|%)\\b"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.integer.virex",
					"match": "\\b[0-9]+\\b"
				},
				{
					"name": "constant.numeric.float.virex",
					"match": "\\b[0-9]+\\.[0-9]+\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.virex",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.virex",
					"match": "\\\\."
				}
			]
		},
		"single-quoted-strings": {
			"name": "string.quoted.single.virex",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.virex",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.virex",
					"match": "//.*$"
				},
				{
					"name": "comment.block.virex",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		}
	},
	"scopeName": "source.virex"
}